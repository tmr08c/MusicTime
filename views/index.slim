doctype html
html
  head
    title =@title
    script src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js'
    script src='https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.2/underscore-min.js'
    script src='https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min.js'


  body
    h1 Music Time
    #content
      form#recent_tracks_form
        label Username
        input#username name='username'
        br
        br
        label Count
        input#count name='count' type='number'
        br
        br
        button type='submit' Submit
      h1 List by Play Time
      ol#track-play-time-list
      h1 List by Play Count
      ol#track-play-count-list
javascript:
  (function($){
    $(document).ready(function() {
      $('#recent_tracks_form').submit(function(ev) {
        ev.preventDefault();
        var request = new Request({
          username: this.username.value,
          count: this.count.value
        });
        return false;
      });
    });

    var Artist = Backbone.Model.extend({
      defaults: {
        'name': '',
        'count': 0,
        'time': 0
      },
      addTrackPlay: function(track_info){
        this.set('count', this.get('count') + 1)
        this.set('time', this.get('time') + track_info['duration'] * 1)
      }
    });
    var ArtistsList = Backbone.Collection.extend({
      model: Artist,
      orderByPlayCount: function(){
        return _.sortBy(this.toArray(), function(artist){ return artist.get('count')});
      },
      orderByPlayTime: function(){
        return _.sortBy(this.toArray(), function(artist){ return artist.get('time')});
      }
    });
    var artists = new ArtistsList();

    var Request = Backbone.Model.extend({
      initialize: function(){
        this.requestRecentTracks(this.get('username'), this.get('count'));
      },
      requestRecentTracks: function(username, count){
        $.ajax({
          url: 'http://localhost:4567/api/v1/recent_tracks',
          dataType: 'json',
          data: {
            username: username,
            count: count
          }
        }).success(function(data){
          console.log('Received Data');
          var artist_info = {}
          _.each(data, function(track_info){
            var artist_name = track_info['name']
            if(!artist_info[artist_name]){
              artist_info[artist_name] = new Artist({'name': artist_name})
            }
            var artist = artist_info[artist_name];
            artist.addTrackPlay(track_info);
          })
          _.each(artist_info, function(artist){
            artists.add(artist);
          });
          console.log('Created Initial Collection');

          var playCountCollection = new ArtistsList(artists.orderByPlayCount());
          var playTimeCollection = new ArtistsList(artists.orderByPlayTime());
          console.log('Created ordered collections')

          var playCountView = new ArtistsView({model: playCountCollection, el: '#track-play-count-list'});
          var playTimeView = new ArtistsView({model: playTimeCollection, el: '#track-play-time-list'});
        });
      }
    });

    // Views
    var ArtistView = Backbone.View.extend({
      model: new Artist(),
      tagName: 'li',
      initialize: function(){
        this.template = _.template($('#artistCountTemplate').html());
      },
      render: function(){
        this.$el.html(this.template(this.model.toJSON()));
        return this;
      }
    });

    var ArtistsView = Backbone.View.extend({
      initialize: function(){
        this.render();
      },
      render: function(){
        var self = this;
        self.$el.html('')
        _.each(this.model.toArray(), function(artist, i){
          self.$el.prepend((new ArtistView({model: artist})).render().$el);
        });
        self.$el.append('<hr>');
        return this;
      }
    });
  })(jQuery);


  // Templates
script type='text/template' id='artistCountTemplate'
  span.name <%= name %> -
  span.time <%= time %>
  span.count  - (<%= count %>)

